# This file contains common pin mappings for the BIGTREETECH Manta M4P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# See docs/Config_Reference.md for a description of parameters.


#####################################################################
#   Includes
#####################################################################


# [include generic-bigtreetech-manta-m4p.cfg]
[include klipperexpansion.cfg]




# host MCU service is preinstalled and ready to use with:
[mcu host]
serial: /tmp/klipper_host_mcu


[temperature_sensor host]
sensor_type: temperature_host


########################################
# Stepper
########################################



[stepper_b]
step_pin: PC6
dir_pin: PA14
enable_pin: !PC7
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC0
homing_speed: 250
homing_retract_dist: 5
homing_retract_speed: 20
#position_endstop: 165
angle: 209.197966
arm_length: 215




[tmc2240 stepper_b]
cs_pin: PB12
spi_bus: spi1
diag0_pin: PG6
run_current: 1.2
interpolate: true


[stepper_c]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC1
#position_endstop: 170
angle: 328.568677
arm_length: 215


[tmc2240 stepper_c]
cs_pin: PC10
spi_bus: spi1
diag0_pin: PG9
run_current: 1.2
interpolate: true


[stepper_a]

step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC2
#position_endstop: 170
angle: 90
arm_length: 215

[tmc2240 stepper_a]
cs_pin: PC9
spi_bus: spi1
diag0_pin: PG10
run_current: 1.2
interpolate: true



[tmc2240 extruder]
cs_pin: PA13
spi_bus: spi1
diag0_pin: PC15
run_current: 0.800
interpolate: true



[autotune_tmc stepper_a]
motor: usongshine-17HS8401
[autotune_tmc stepper_b]
motor: usongshine-17HS8401
[autotune_tmc stepper_c]
motor: usongshine-17HS8401
[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg





########################################
# Extruder
########################################


[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD5
microsteps: 16
rotation_distance: 7.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: expander:PA2    # Ist eigentlich auf Klipperboard
sensor_type: PT1000
sensor_pin: PA0
#control: pid
#pid_Kp: 20.837
#pid_Ki: 1.037
#pid_Kd: 104.708
min_temp: 0
max_temp: 375


# [output_pin mosfet2]
# pin: expander:PA2
# pwm: true
# cycle_time: 0.010
# value: 0
# shutdown_value: 0


########################################
# Heizbett
########################################

[heater_bed]
heater_pin: expander:PA0
sensor_type: Generic 3950
sensor_pin: PC4
#control = pid
#pid_kp = 62.901
#pid_ki = 1.808
#pid_kd = 547.241
min_temp: 0
max_temp: 120



#[output_pin mosfet0]
#pin: expander:PA0
#pwm: true
#cycle_time: 0.010
#value: 0
#shutdown_value: 0



[heater_fan hotend_fan]
pin: PD2
heater: extruder
heater_temp: 50.0


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp:-30
max_temp: 100


#[fan_generic E-department]
#pin: PD4



[controller_fan E-Department]
pin: PD4
max_power: 0.45
shutdown_speed: 0.0
cycle_time: 0.004
hardware_pwm: False
kick_start_time: 0.1
off_below: 0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 60
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.2
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.










[fan]
pin: PD3

[fan_generic PTC_fan]
pin: PC8

[temperature_fan host_Fan]
pin: host:gpio26         # CB2:gpio269
sensor_type: temperature_host
control: watermark
min_temp: 0
max_temp: 85
target_temp: 45
max_speed: 1.0
min_speed: 0.1



[neopixel rgb1]
pin: PD0

[neopixel rgb2]
pin: PD1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1900340019504B5735313920-if00

[printer]
kinematics: delta
max_velocity: 250
max_accel: 3500
max_z_velocity: 50
minimum_z_position: -25
delta_radius: 100.922298
print_radius: 100

[input_shaper]

########################################
# Beacon
########################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_B5BAC37A4E4B333448202020FF0A0E36-if00
x_offset: -20 # update with offset from nozzle on your machine
y_offset: 0 # update with offset from nozzle on your machine
# mesh_main_direction: x
# mesh_runs: 2


#[safe_z_home]
#home_xy_position: 70, 70 # update for your machine
#z_hop: 3


########################################
# Delta Calibration & Mesh Settings
########################################

[delta_calibrate]
radius: 70
horizontal_move_z: 50  # was 15 per default

[bed_mesh]
speed: 50
horizontal_move_z: 15
mesh_radius: 45
mesh_origin: 0,0
round_probe_count: 5
algorithm: bicubic

########################################
# Shaketune
########################################


[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.




########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD6,  EXP1_3=PB9,  EXP1_5=PA15, EXP1_7=PA9,   EXP1_9=<GND>,
    EXP1_2=PB8,  EXP1_4=PC3,  EXP1_6=PA10, EXP1_8=PB5,   EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PC11, EXP2_5=PC12, EXP2_7=PC13,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA8,  EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.


##################################################
# Pause / Resume / Cancel Print
##################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-67) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length

    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}   
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  RESPOND MSG="Printing canceled"
  G28
  M106 S0
  M104 S0
  M140 S0
  CANCEL_PRINT_BASE


[gcode_macro z_calibration]
# rename_existing: BASE_Z_ENDSTOP_CALIBRATE
gcode:
    M117 Calibrating Z Endstop
    {% if "z" not in printer.toolhead.homed_axes %} ; Home if needed
        G28
    {% endif %}
    Z_ENDSTOP_CALIBRATE
    
########################################
# G-Code Macros & Events
########################################

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[idle_timeout]
timeout: 1800

[gcode_arcs]
resolution: 0.1

[respond]

[pause_resume]

[display_status]


[pause_resume]


########################################
# BTT ADXL345
########################################


# This file contains common pin mappings for the bigtreetech adxl345 v2.0
# To use this config, the firmware should be compiled for the
# RP2040 with "USB"
# The micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu btt_adxl345]
serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128938CE8-if00

[adxl345]
cs_pin: btt_adxl345:gpio9
#spi_bus: spi1a
spi_software_sclk_pin: btt_adxl345:gpio10
spi_software_mosi_pin: btt_adxl345:gpio11
spi_software_miso_pin: btt_adxl345:gpio8
axes_map: x, -z, y

[resonance_tester]
probe_points: 0, 0, 20
accel_chip: adxl345

# [adxl345_probe]
# probe_pin: btt_adxl345:gpio4  # or btt_adxl345:gpio3 for `int2`
# int_pin: int1 # select either int1 or int2
# tap_thresh: 12000 # this needs to be tuned
# tap_dur: 0.01 # this needs to be tuned
# speed: 20 # this needs to be tuned
# # Adjust this to your liking
# samples: 3
# sample_retract_dist: 3.0
# samples_result: median
# samples_tolerance: 0.01
# samples_tolerance_retries: 20

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.988
#*# pid_ki = 1.904
#*# pid_kd = 75.563
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.657
#*# pid_ki = 3.611
#*# pid_kd = 254.758
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 43.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 133.4
#*#
#*# [stepper_a]
#*# position_endstop = 166.550
#*#
#*# [stepper_b]
#*# position_endstop = 161.550
#*#
#*# [stepper_c]
#*# position_endstop = 166.550
